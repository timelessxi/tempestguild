<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card bg-dark text-white">
                <div class="card-body">
                    <h2 class="text-center mb-4">Register</h2>
                    <form method="POST" action="/register" id="register-form">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" id="username" name="username" required>
                            <div class="invalid-feedback" id="username-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                            <div class="invalid-feedback" id="email-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                            <small class="form-text text-muted">Password must be at least 8 characters long, contain one
                                uppercase letter, one number, and one special character.</small>
                            <div class="invalid-feedback" id="password-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="confirm-password">Confirm Password</label>
                            <input type="password" class="form-control" id="confirm-password" name="confirmPassword"
                                required>
                            <div class="invalid-feedback" id="confirm-password-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="character-name">Character Name</label>
                            <input type="text" class="form-control" id="character-name" name="character-name" required>
                            <div class="invalid-feedback" id="character-error"></div>
                        </div>
                        <button type="submit" class="btn btn-primary btn-block mt-4">Register</button>
                    </form>
                    <p class="text-center mt-3">Already have an account? <a href="/login" class="text-primary">Login</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('register-form').addEventListener('submit', async function (event) {
        event.preventDefault();  // Prevent form submission to check validation first

        // Reset previous error messages
        document.querySelectorAll('.invalid-feedback').forEach(function (el) {
            el.textContent = '';
            el.style.display = 'none';  // Hide previous error messages
        });

        let hasError = false;

        // Get password values and trim them (in case of accidental spaces)
        const password = document.getElementById('password').value.trim();
        const confirmPassword = document.getElementById('confirm-password').value.trim();

        // Password validation regex
        const passwordPattern = /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/;

        // Validate password criteria
        if (!passwordPattern.test(password)) {
            document.getElementById('password-error').textContent = 'Password must meet the criteria.';
            document.getElementById('password-error').style.display = 'block';
            hasError = true;
        }

        // Validate that passwords match
        if (password !== confirmPassword) {
            document.getElementById('confirm-password-error').textContent = 'Passwords do not match.';
            document.getElementById('confirm-password-error').style.display = 'block';
            hasError = true;
        }

        // Character validation (real server-side check)
        const characterName = document.getElementById('character-name').value.trim();
        const characterExists = await checkCharacterExists(characterName);
        if (!characterExists) {
            document.getElementById('character-error').textContent = 'Character not found in unclaimed characters.';
            document.getElementById('character-error').style.display = 'block';
            hasError = true;
        }

        // If there are no errors, submit the form
        if (!hasError) {
            console.log('Form is valid, submitting...');
            document.getElementById('register-form').submit();  // Submit the form if no errors were found
        } else {
            console.log('Form has errors, not submitting.');
        }
    });


    // Function to check character existence
    async function checkCharacterExists(characterName) {
        try {
            const response = await fetch(`/check-character?name=${encodeURIComponent(characterName)}`);
            const data = await response.json();
            return data.exists;
        } catch (error) {
            console.error('Error checking character:', error);
            return false;
        }

    }

</script>